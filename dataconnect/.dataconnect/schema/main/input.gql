"""
✨ `AIEmployee_KeyOutput` returns the primary key fields of table type `AIEmployee`.

It has the same format as `AIEmployee_Key`, but is only used as mutation return value.
"""
scalar AIEmployee_KeyOutput
"""
✨ `AIEmployeeSkill_KeyOutput` returns the primary key fields of table type `AIEmployeeSkill`.

It has the same format as `AIEmployeeSkill_Key`, but is only used as mutation return value.
"""
scalar AIEmployeeSkill_KeyOutput
"""
✨ `Skill_KeyOutput` returns the primary key fields of table type `Skill`.

It has the same format as `Skill_Key`, but is only used as mutation return value.
"""
scalar Skill_KeyOutput
"""
✨ `Task_KeyOutput` returns the primary key fields of table type `Task`.

It has the same format as `Task_Key`, but is only used as mutation return value.
"""
scalar Task_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'AIEmployee'. It includes all necessary fields for creating or upserting rows into table.
"""
input AIEmployee_Data {
  """
  ✨ Generated from Field `AIEmployee`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AIEmployee`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `AIEmployee`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `AIEmployee`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `AIEmployee`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `AIEmployee`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `AIEmployee`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `AIEmployee`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `AIEmployee`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `AIEmployee`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `AIEmployee`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `AIEmployee`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `AIEmployee`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `AIEmployee`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `AIEmployee`.`status` of type `String!`)
  """
  status_expr: String_Expr
  """
  ✨ Generated from Field `AIEmployee`.`type` of type `String!`
  """
  type: String
  """
  ✨ `_expr` server value variant of `type` (✨ Generated from Field `AIEmployee`.`type` of type `String!`)
  """
  type_expr: String_Expr
}
"""
✨ Generated filter input type for table 'AIEmployee'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AIEmployee_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [AIEmployee_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: AIEmployee_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [AIEmployee_Filter!]
  """
  ✨ Generated from Field `AIEmployee`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `AIEmployee`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `AIEmployee`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `AIEmployee`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `AIEmployee`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `AIEmployee`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `AIEmployee`.`status` of type `String!`
  """
  status: String_Filter
  """
  ✨ Generated from Field `AIEmployee`.`type` of type `String!`
  """
  type: String_Filter
  """
  ✨ Generated from Field `AIEmployee`.`aIEmployeeSkills_on_aiEmployee` of type `[AIEmployeeSkill!]!`
  """
  aIEmployeeSkills_on_aiEmployee: AIEmployeeSkill_ListFilter
  """
  ✨ Generated from Field `AIEmployee`.`tasks_on_aiEmployee` of type `[Task!]!`
  """
  tasks_on_aiEmployee: Task_ListFilter
  """
  ✨ Generated from Field `AIEmployee`.`skills_via_AIEmployeeSkill` of type `[Skill!]!`
  """
  skills_via_AIEmployeeSkill: Skill_ListFilter
}
"""
✨ Generated first-row input type for table 'AIEmployee'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input AIEmployee_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [AIEmployee_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: AIEmployee_Filter
}
"""
✨ Generated having input type for table 'AIEmployee'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AIEmployee_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [AIEmployee_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: AIEmployee_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [AIEmployee_Having!]
  """
  ✨ Generated from Field `AIEmployee`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `AIEmployee`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployee`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployee`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployee`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployee`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployee`.`type_count` of type `Int!`
  """
  type_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployee`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployee`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `AIEmployee`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'AIEmployee'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input AIEmployee_Key {
  """
  ✨ Generated from Field `AIEmployee`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AIEmployee`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'AIEmployee'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input AIEmployee_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: AIEmployee_Filter
}
"""
✨ Generated order input type for table 'AIEmployee'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input AIEmployee_Order {
  """
  ✨ Generated from Field `AIEmployee`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `AIEmployee`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`type` of type `String!`
  """
  type: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`name_count` of type `Int!`
  """
  name_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`status_count` of type `Int!`
  """
  status_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`type_count` of type `Int!`
  """
  type_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `AIEmployee`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'AIEmployeeSkill'. It includes all necessary fields for creating or upserting rows into table.
"""
input AIEmployeeSkill_Data {
  """
  ✨ Generated from Field `AIEmployeeSkill`.`aiEmployeeId` of type `UUID!`
  """
  aiEmployeeId: UUID
  """
  ✨ `_expr` server value variant of `aiEmployeeId` (✨ Generated from Field `AIEmployeeSkill`.`aiEmployeeId` of type `UUID!`)
  """
  aiEmployeeId_expr: UUID_Expr
  """
  ✨ Generated from Field `AIEmployeeSkill`.`skillId` of type `UUID!`
  """
  skillId: UUID
  """
  ✨ `_expr` server value variant of `skillId` (✨ Generated from Field `AIEmployeeSkill`.`skillId` of type `UUID!`)
  """
  skillId_expr: UUID_Expr
  """
  ✨ Generated from Field `AIEmployeeSkill`.`aiEmployee` of type `AIEmployee!`
  """
  aiEmployee: AIEmployee_Key
  """
  ✨ Generated from Field `AIEmployeeSkill`.`skill` of type `Skill!`
  """
  skill: Skill_Key
  """
  ✨ Generated from Field `AIEmployeeSkill`.`configuration` of type `String`
  """
  configuration: String
  """
  ✨ `_expr` server value variant of `configuration` (✨ Generated from Field `AIEmployeeSkill`.`configuration` of type `String`)
  """
  configuration_expr: String_Expr
  """
  ✨ Generated from Field `AIEmployeeSkill`.`enabled` of type `Boolean!`
  """
  enabled: Boolean
  """
  ✨ `_expr` server value variant of `enabled` (✨ Generated from Field `AIEmployeeSkill`.`enabled` of type `Boolean!`)
  """
  enabled_expr: Boolean_Expr
}
"""
✨ Generated filter input type for table 'AIEmployeeSkill'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AIEmployeeSkill_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [AIEmployeeSkill_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: AIEmployeeSkill_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [AIEmployeeSkill_Filter!]
  """
  ✨ Generated from Field `AIEmployeeSkill`.`aiEmployeeId` of type `UUID!`
  """
  aiEmployeeId: UUID_Filter
  """
  ✨ Generated from Field `AIEmployeeSkill`.`skillId` of type `UUID!`
  """
  skillId: UUID_Filter
  """
  ✨ Generated from Field `AIEmployeeSkill`.`aiEmployee` of type `AIEmployee!`
  """
  aiEmployee: AIEmployee_Filter
  """
  ✨ Generated from Field `AIEmployeeSkill`.`skill` of type `Skill!`
  """
  skill: Skill_Filter
  """
  ✨ Generated from Field `AIEmployeeSkill`.`configuration` of type `String`
  """
  configuration: String_Filter
  """
  ✨ Generated from Field `AIEmployeeSkill`.`enabled` of type `Boolean!`
  """
  enabled: Boolean_Filter
}
"""
✨ Generated first-row input type for table 'AIEmployeeSkill'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input AIEmployeeSkill_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [AIEmployeeSkill_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: AIEmployeeSkill_Filter
}
"""
✨ Generated having input type for table 'AIEmployeeSkill'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AIEmployeeSkill_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [AIEmployeeSkill_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: AIEmployeeSkill_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [AIEmployeeSkill_Having!]
  """
  ✨ Generated from Field `AIEmployeeSkill`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `AIEmployeeSkill`.`aiEmployeeId_count` of type `Int!`
  """
  aiEmployeeId_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployeeSkill`.`configuration_count` of type `Int!`
  """
  configuration_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployeeSkill`.`enabled_count` of type `Int!`
  """
  enabled_count: Int_Filter
  """
  ✨ Generated from Field `AIEmployeeSkill`.`skillId_count` of type `Int!`
  """
  skillId_count: Int_Filter
}
"""
✨ Generated key input type for table 'AIEmployeeSkill'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input AIEmployeeSkill_Key {
  """
  ✨ Generated from Field `AIEmployeeSkill`.`aiEmployeeId` of type `UUID!`
  """
  aiEmployeeId: UUID
  """
  ✨ `_expr` server value variant of `aiEmployeeId` (✨ Generated from Field `AIEmployeeSkill`.`aiEmployeeId` of type `UUID!`)
  """
  aiEmployeeId_expr: UUID_Expr
  """
  ✨ Generated from Field `AIEmployeeSkill`.`skillId` of type `UUID!`
  """
  skillId: UUID
  """
  ✨ `_expr` server value variant of `skillId` (✨ Generated from Field `AIEmployeeSkill`.`skillId` of type `UUID!`)
  """
  skillId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'AIEmployeeSkill'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input AIEmployeeSkill_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: AIEmployeeSkill_Filter
}
"""
✨ Generated order input type for table 'AIEmployeeSkill'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input AIEmployeeSkill_Order {
  """
  ✨ Generated from Field `AIEmployeeSkill`.`aiEmployeeId` of type `UUID!`
  """
  aiEmployeeId: OrderDirection
  """
  ✨ Generated from Field `AIEmployeeSkill`.`skillId` of type `UUID!`
  """
  skillId: OrderDirection
  """
  ✨ Generated from Field `AIEmployeeSkill`.`aiEmployee` of type `AIEmployee!`
  """
  aiEmployee: AIEmployee_Order
  """
  ✨ Generated from Field `AIEmployeeSkill`.`skill` of type `Skill!`
  """
  skill: Skill_Order
  """
  ✨ Generated from Field `AIEmployeeSkill`.`configuration` of type `String`
  """
  configuration: OrderDirection
  """
  ✨ Generated from Field `AIEmployeeSkill`.`enabled` of type `Boolean!`
  """
  enabled: OrderDirection
  """
  ✨ Generated from Field `AIEmployeeSkill`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `AIEmployeeSkill`.`aiEmployeeId_count` of type `Int!`
  """
  aiEmployeeId_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployeeSkill`.`configuration_count` of type `Int!`
  """
  configuration_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployeeSkill`.`enabled_count` of type `Int!`
  """
  enabled_count: OrderDirection
  """
  ✨ Generated from Field `AIEmployeeSkill`.`skillId_count` of type `Int!`
  """
  skillId_count: OrderDirection
}
"""
✨ Generated data input type for table 'Skill'. It includes all necessary fields for creating or upserting rows into table.
"""
input Skill_Data {
  """
  ✨ Generated from Field `Skill`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Skill`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Skill`.`category` of type `String!`
  """
  category: String
  """
  ✨ `_expr` server value variant of `category` (✨ Generated from Field `Skill`.`category` of type `String!`)
  """
  category_expr: String_Expr
  """
  ✨ Generated from Field `Skill`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Skill`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Skill`.`inputSchema` of type `String`
  """
  inputSchema: String
  """
  ✨ `_expr` server value variant of `inputSchema` (✨ Generated from Field `Skill`.`inputSchema` of type `String`)
  """
  inputSchema_expr: String_Expr
  """
  ✨ Generated from Field `Skill`.`isPredefined` of type `Boolean!`
  """
  isPredefined: Boolean
  """
  ✨ `_expr` server value variant of `isPredefined` (✨ Generated from Field `Skill`.`isPredefined` of type `Boolean!`)
  """
  isPredefined_expr: Boolean_Expr
  """
  ✨ Generated from Field `Skill`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Skill`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Skill`.`outputSchema` of type `String`
  """
  outputSchema: String
  """
  ✨ `_expr` server value variant of `outputSchema` (✨ Generated from Field `Skill`.`outputSchema` of type `String`)
  """
  outputSchema_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Skill'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Skill_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Skill_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Skill_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Skill_Filter!]
  """
  ✨ Generated from Field `Skill`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Skill`.`category` of type `String!`
  """
  category: String_Filter
  """
  ✨ Generated from Field `Skill`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Skill`.`inputSchema` of type `String`
  """
  inputSchema: String_Filter
  """
  ✨ Generated from Field `Skill`.`isPredefined` of type `Boolean!`
  """
  isPredefined: Boolean_Filter
  """
  ✨ Generated from Field `Skill`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Skill`.`outputSchema` of type `String`
  """
  outputSchema: String_Filter
  """
  ✨ Generated from Field `Skill`.`aIEmployeeSkills_on_skill` of type `[AIEmployeeSkill!]!`
  """
  aIEmployeeSkills_on_skill: AIEmployeeSkill_ListFilter
  """
  ✨ Generated from Field `Skill`.`tasks_on_skillUsed` of type `[Task!]!`
  """
  tasks_on_skillUsed: Task_ListFilter
  """
  ✨ Generated from Field `Skill`.`aIEmployees_via_AIEmployeeSkill` of type `[AIEmployee!]!`
  """
  aIEmployees_via_AIEmployeeSkill: AIEmployee_ListFilter
}
"""
✨ Generated first-row input type for table 'Skill'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Skill_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Skill_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Skill_Filter
}
"""
✨ Generated having input type for table 'Skill'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Skill_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Skill_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Skill_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Skill_Having!]
  """
  ✨ Generated from Field `Skill`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Skill`.`category_count` of type `Int!`
  """
  category_count: Int_Filter
  """
  ✨ Generated from Field `Skill`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Skill`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Skill`.`inputSchema_count` of type `Int!`
  """
  inputSchema_count: Int_Filter
  """
  ✨ Generated from Field `Skill`.`isPredefined_count` of type `Int!`
  """
  isPredefined_count: Int_Filter
  """
  ✨ Generated from Field `Skill`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Skill`.`outputSchema_count` of type `Int!`
  """
  outputSchema_count: Int_Filter
}
"""
✨ Generated key input type for table 'Skill'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Skill_Key {
  """
  ✨ Generated from Field `Skill`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Skill`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Skill'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Skill_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Skill_Filter
}
"""
✨ Generated order input type for table 'Skill'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Skill_Order {
  """
  ✨ Generated from Field `Skill`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Skill`.`category` of type `String!`
  """
  category: OrderDirection
  """
  ✨ Generated from Field `Skill`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Skill`.`inputSchema` of type `String`
  """
  inputSchema: OrderDirection
  """
  ✨ Generated from Field `Skill`.`isPredefined` of type `Boolean!`
  """
  isPredefined: OrderDirection
  """
  ✨ Generated from Field `Skill`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Skill`.`outputSchema` of type `String`
  """
  outputSchema: OrderDirection
  """
  ✨ Generated from Field `Skill`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Skill`.`category_count` of type `Int!`
  """
  category_count: OrderDirection
  """
  ✨ Generated from Field `Skill`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Skill`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Skill`.`inputSchema_count` of type `Int!`
  """
  inputSchema_count: OrderDirection
  """
  ✨ Generated from Field `Skill`.`isPredefined_count` of type `Int!`
  """
  isPredefined_count: OrderDirection
  """
  ✨ Generated from Field `Skill`.`name_count` of type `Int!`
  """
  name_count: OrderDirection
  """
  ✨ Generated from Field `Skill`.`outputSchema_count` of type `Int!`
  """
  outputSchema_count: OrderDirection
}
"""
✨ Generated data input type for table 'Task'. It includes all necessary fields for creating or upserting rows into table.
"""
input Task_Data {
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Task`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Task`.`aiEmployeeId` of type `UUID!`
  """
  aiEmployeeId: UUID
  """
  ✨ `_expr` server value variant of `aiEmployeeId` (✨ Generated from Field `Task`.`aiEmployeeId` of type `UUID!`)
  """
  aiEmployeeId_expr: UUID_Expr
  """
  ✨ Generated from Field `Task`.`skillUsedId` of type `UUID`
  """
  skillUsedId: UUID
  """
  ✨ `_expr` server value variant of `skillUsedId` (✨ Generated from Field `Task`.`skillUsedId` of type `UUID`)
  """
  skillUsedId_expr: UUID_Expr
  """
  ✨ Generated from Field `Task`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Task`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Task`.`aiEmployee` of type `AIEmployee!`
  """
  aiEmployee: AIEmployee_Key
  """
  ✨ Generated from Field `Task`.`skillUsed` of type `Skill`
  """
  skillUsed: Skill_Key
  """
  ✨ Generated from Field `Task`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Task`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Task`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`dueDate` of type `Timestamp`
  """
  dueDate: Timestamp
  """
  ✨ `_expr` server value variant of `dueDate` (✨ Generated from Field `Task`.`dueDate` of type `Timestamp`)
  """
  dueDate_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `dueDate` (✨ Generated from Field `Task`.`dueDate` of type `Timestamp`)
  """
  dueDate_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `dueDate` (✨ Generated from Field `Task`.`dueDate` of type `Timestamp`)
  """
  dueDate_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Task`.`inputData` of type `String`
  """
  inputData: String
  """
  ✨ `_expr` server value variant of `inputData` (✨ Generated from Field `Task`.`inputData` of type `String`)
  """
  inputData_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`outputData` of type `String`
  """
  outputData: String
  """
  ✨ `_expr` server value variant of `outputData` (✨ Generated from Field `Task`.`outputData` of type `String`)
  """
  outputData_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `Task`.`status` of type `String!`)
  """
  status_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Task`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Task`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Task`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Task'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Task_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Task_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Task_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Task_Filter!]
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Task`.`aiEmployeeId` of type `UUID!`
  """
  aiEmployeeId: UUID_Filter
  """
  ✨ Generated from Field `Task`.`skillUsedId` of type `UUID`
  """
  skillUsedId: UUID_Filter
  """
  ✨ Generated from Field `Task`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Task`.`aiEmployee` of type `AIEmployee!`
  """
  aiEmployee: AIEmployee_Filter
  """
  ✨ Generated from Field `Task`.`skillUsed` of type `Skill`
  """
  skillUsed: Skill_Filter
  """
  ✨ Generated from Field `Task`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Task`.`dueDate` of type `Timestamp`
  """
  dueDate: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`inputData` of type `String`
  """
  inputData: String_Filter
  """
  ✨ Generated from Field `Task`.`outputData` of type `String`
  """
  outputData: String_Filter
  """
  ✨ Generated from Field `Task`.`status` of type `String!`
  """
  status: String_Filter
  """
  ✨ Generated from Field `Task`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'Task'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Task_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Task_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Task_Filter
}
"""
✨ Generated having input type for table 'Task'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Task_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Task_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Task_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Task_Having!]
  """
  ✨ Generated from Field `Task`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Task`.`aiEmployeeId_count` of type `Int!`
  """
  aiEmployeeId_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`dueDate_count` of type `Int!`
  """
  dueDate_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`inputData_count` of type `Int!`
  """
  inputData_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`outputData_count` of type `Int!`
  """
  outputData_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`skillUsedId_count` of type `Int!`
  """
  skillUsedId_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`dueDate_min` of type `Timestamp`
  """
  dueDate_min: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`dueDate_max` of type `Timestamp`
  """
  dueDate_max: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Task'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Task_Key {
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Task`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Task'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Task_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Task_Filter
}
"""
✨ Generated order input type for table 'Task'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Task_Order {
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Task`.`aiEmployeeId` of type `UUID!`
  """
  aiEmployeeId: OrderDirection
  """
  ✨ Generated from Field `Task`.`skillUsedId` of type `UUID`
  """
  skillUsedId: OrderDirection
  """
  ✨ Generated from Field `Task`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Task`.`aiEmployee` of type `AIEmployee!`
  """
  aiEmployee: AIEmployee_Order
  """
  ✨ Generated from Field `Task`.`skillUsed` of type `Skill`
  """
  skillUsed: Skill_Order
  """
  ✨ Generated from Field `Task`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Task`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Task`.`dueDate` of type `Timestamp`
  """
  dueDate: OrderDirection
  """
  ✨ Generated from Field `Task`.`inputData` of type `String`
  """
  inputData: OrderDirection
  """
  ✨ Generated from Field `Task`.`outputData` of type `String`
  """
  outputData: OrderDirection
  """
  ✨ Generated from Field `Task`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `Task`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
  """
  ✨ Generated from Field `Task`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Task`.`aiEmployeeId_count` of type `Int!`
  """
  aiEmployeeId_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`dueDate_count` of type `Int!`
  """
  dueDate_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`inputData_count` of type `Int!`
  """
  inputData_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`outputData_count` of type `Int!`
  """
  outputData_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`skillUsedId_count` of type `Int!`
  """
  skillUsedId_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`status_count` of type `Int!`
  """
  status_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Task`.`dueDate_min` of type `Timestamp`
  """
  dueDate_min: OrderDirection
  """
  ✨ Generated from Field `Task`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `Task`.`dueDate_max` of type `Timestamp`
  """
  dueDate_max: OrderDirection
  """
  ✨ Generated from Field `Task`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`organizationName` of type `String`
  """
  organizationName: String
  """
  ✨ `_expr` server value variant of `organizationName` (✨ Generated from Field `User`.`organizationName` of type `String`)
  """
  organizationName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`profilePictureUrl` of type `String`
  """
  profilePictureUrl: String
  """
  ✨ `_expr` server value variant of `profilePictureUrl` (✨ Generated from Field `User`.`profilePictureUrl` of type `String`)
  """
  profilePictureUrl_expr: String_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`organizationName` of type `String`
  """
  organizationName: String_Filter
  """
  ✨ Generated from Field `User`.`profilePictureUrl` of type `String`
  """
  profilePictureUrl: String_Filter
  """
  ✨ Generated from Field `User`.`aIEmployees_on_user` of type `[AIEmployee!]!`
  """
  aIEmployees_on_user: AIEmployee_ListFilter
  """
  ✨ Generated from Field `User`.`tasks_on_user` of type `[Task!]!`
  """
  tasks_on_user: Task_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`organizationName_count` of type `Int!`
  """
  organizationName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`profilePictureUrl_count` of type `Int!`
  """
  profilePictureUrl_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`organizationName` of type `String`
  """
  organizationName: OrderDirection
  """
  ✨ Generated from Field `User`.`profilePictureUrl` of type `String`
  """
  profilePictureUrl: OrderDirection
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: OrderDirection
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: OrderDirection
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `User`.`organizationName_count` of type `Int!`
  """
  organizationName_count: OrderDirection
  """
  ✨ Generated from Field `User`.`profilePictureUrl_count` of type `Int!`
  """
  profilePictureUrl_count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
